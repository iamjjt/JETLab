@model Mall.Models.Goods

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
<div class="pageFormContent">

        @Html.HiddenFor(model => model.ID)

        <p class="editor-field">
            @Html.LabelFor(model => model.CAID)
            @Html.EditorFor(model => model.CAID)
            @Html.ValidationMessageFor(model => model.CAID)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.NO)
            @Html.EditorFor(model => model.NO)
            @Html.ValidationMessageFor(model => model.NO)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Name)
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.NameStyle)
            @Html.EditorFor(model => model.NameStyle)
            @Html.ValidationMessageFor(model => model.NameStyle)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Hits)
            @Html.EditorFor(model => model.Hits)
            @Html.ValidationMessageFor(model => model.Hits)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.BrandID)
            @Html.EditorFor(model => model.BrandID)
            @Html.ValidationMessageFor(model => model.BrandID)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.ProviderName)
            @Html.EditorFor(model => model.ProviderName)
            @Html.ValidationMessageFor(model => model.ProviderName)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Number)
            @Html.EditorFor(model => model.Number)
            @Html.ValidationMessageFor(model => model.Number)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Weight)
            @Html.EditorFor(model => model.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.MarketPrice)
            @Html.EditorFor(model => model.MarketPrice)
            @Html.ValidationMessageFor(model => model.MarketPrice)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.MallPrice)
            @Html.EditorFor(model => model.MallPrice)
            @Html.ValidationMessageFor(model => model.MallPrice)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.PromotePrice)
            @Html.EditorFor(model => model.PromotePrice)
            @Html.ValidationMessageFor(model => model.PromotePrice)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.PromoteStartDate)
            @Html.EditorFor(model => model.PromoteStartDate)
            @Html.ValidationMessageFor(model => model.PromoteStartDate)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.PromoteEndDate)
            @Html.EditorFor(model => model.PromoteEndDate)
            @Html.ValidationMessageFor(model => model.PromoteEndDate)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.WarnNumber)
            @Html.EditorFor(model => model.WarnNumber)
            @Html.ValidationMessageFor(model => model.WarnNumber)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Keywords)
            @Html.EditorFor(model => model.Keywords)
            @Html.ValidationMessageFor(model => model.Keywords)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Summary)
            @Html.EditorFor(model => model.Summary)
            @Html.ValidationMessageFor(model => model.Summary)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Details)
            @Html.EditorFor(model => model.Details)
            @Html.ValidationMessageFor(model => model.Details)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Thumb)
            @Html.EditorFor(model => model.Thumb)
            @Html.ValidationMessageFor(model => model.Thumb)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Img)
            @Html.EditorFor(model => model.Img)
            @Html.ValidationMessageFor(model => model.Img)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsReal)
            @Html.EditorFor(model => model.IsReal)
            @Html.ValidationMessageFor(model => model.IsReal)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.ExtensionCode)
            @Html.EditorFor(model => model.ExtensionCode)
            @Html.ValidationMessageFor(model => model.ExtensionCode)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsOnSale)
            @Html.EditorFor(model => model.IsOnSale)
            @Html.ValidationMessageFor(model => model.IsOnSale)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsAloneSale)
            @Html.EditorFor(model => model.IsAloneSale)
            @Html.ValidationMessageFor(model => model.IsAloneSale)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Integral)
            @Html.EditorFor(model => model.Integral)
            @Html.ValidationMessageFor(model => model.Integral)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.AddTime)
            @Html.EditorFor(model => model.AddTime)
            @Html.ValidationMessageFor(model => model.AddTime)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.SortOrder)
            @Html.EditorFor(model => model.SortOrder)
            @Html.ValidationMessageFor(model => model.SortOrder)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsDelete)
            @Html.EditorFor(model => model.IsDelete)
            @Html.ValidationMessageFor(model => model.IsDelete)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsBest)
            @Html.EditorFor(model => model.IsBest)
            @Html.ValidationMessageFor(model => model.IsBest)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsNew)
            @Html.EditorFor(model => model.IsNew)
            @Html.ValidationMessageFor(model => model.IsNew)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsHot)
            @Html.EditorFor(model => model.IsHot)
            @Html.ValidationMessageFor(model => model.IsHot)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.IsPromote)
            @Html.EditorFor(model => model.IsPromote)
            @Html.ValidationMessageFor(model => model.IsPromote)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.LastUpdate)
            @Html.EditorFor(model => model.LastUpdate)
            @Html.ValidationMessageFor(model => model.LastUpdate)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Type)
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.Remarks)
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </p>

        <p class="editor-field">
            @Html.LabelFor(model => model.GiveIntegral)
            @Html.EditorFor(model => model.GiveIntegral)
            @Html.ValidationMessageFor(model => model.GiveIntegral)
        </p>

        <p>
            <input type="submit" value="Save" />
        </p>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
